img3 <- readPNG("figure1_intermed_genome_arch.png")
img4 <- readPNG("figure1_final_genome_arch.png")
#Create and save Figure 1
figure1 <- grid.arrange(img1, rasterGrob(img2, vjust=5.005, width=0.84), rasterGrob(img3, vjust=5.34, width=0.84), rasterGrob(img4, vjust=5.51, width=0.85), target_line_plot, line_plot_zero, line_plot_int, line_plot_final, rmse_line_plot, layout_matrix=rbind(c(1,2,3,4), c(5,6,7,8), c(9,9,9,9)), widths=c(2.3,2,2,2), bottom=textGrob("Time (s)", gp=gpar(fontsize=15, fontfamily="Arial"), vjust=-18, hjust=0.1))
ggsave("figure1.png", figure1, height=8, width=12, units="in")
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
library(png)
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
library(png)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data1_arrange1.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_1 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
ylab("Target transcript \nabundance") +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=17),
axis.title.x = element_blank(),
axis.title.y = element_text(size=17),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_1 <- arrangeGrob(target_line_plot_1, top=textGrob("A", x = unit(0, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../manuscript/figure_data/fig2/paper_data1_arrange1/")
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data1_arrange1.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_1 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
ylab("Target transcript \nabundance") +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=17),
axis.title.x = element_blank(),
axis.title.y = element_text(size=17),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_1 <- arrangeGrob(target_line_plot_1, top=textGrob("A", x = unit(0, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../manuscript/figure_data/fig2/paper_data1_arrange1/")
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(gridExtra)
library(ggplot2)
library(grid)
library(reshape2)
library(gtools)
library(png)
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data1_arrange1.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_1 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
ylab("Target transcript \nabundance") +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=17),
axis.title.x = element_blank(),
axis.title.y = element_text(size=17),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_1 <- arrangeGrob(target_line_plot_1, top=textGrob("A", x = unit(0, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../manuscript/figure_data/fig2/paper_data1_arrange1/")
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data1_arrange1.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_1 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
ylab("Target transcript \nabundance") +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=17),
axis.title.x = element_blank(),
axis.title.y = element_text(size=17),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_1 <- arrangeGrob(target_line_plot_1, top=textGrob("A", x = unit(0, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../manuscript/figure_data/fig2/paper_data1_arrange1/")
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data1_arrange1.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_1 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
ylab("Target transcript \nabundance") +
theme(legend.position = "none",
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=17),
axis.title.x = element_blank(),
axis.title.y = element_text(size=17),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_1 <- arrangeGrob(target_line_plot_1, top=textGrob("A", x = unit(0, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/paper_data1_arrange1/")
#List all transcript output files
plot_data <- read.table('expression_pattern_best.tsv', header=TRUE)
plot_data <- filter(plot_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
final_line_plot_1 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
ylab("Evolved transcript \nabundance") +
theme(legend.position = "none",
axis.title.x = element_blank(),
axis.text = element_text(size=17),
axis.title.y = element_text(size=17),
plot.margin = unit(c(-5.50,0.5,5.75,0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
final_line_plot_1 <- arrangeGrob(final_line_plot_1, top=textGrob("B", x = unit(0, "npc"), y=unit(8.5, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=24, fontfamily="Arial")))
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data1_arrange5.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_2 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_2 <- arrangeGrob(target_line_plot_2, top=textGrob("B", x = unit(-0.03, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../manuscript/figure_data/fig2/paper_data1_arrange5/")
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data1_arrange5.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_2 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_2 <- arrangeGrob(target_line_plot_2, top=textGrob("B", x = unit(-0.03, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/paper_data1_arrange5/")
#List all transcript output files
plot_data <- read.table('expression_pattern_best.tsv', header=TRUE)
plot_data <- filter(plot_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
final_line_plot_2 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(size=17),
axis.title = element_blank(),
axis.line.y = element_blank(),
plot.margin = unit(c(-5.50,0.5,5.75,0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
final_line_plot_2 <- arrangeGrob(final_line_plot_2, top=textGrob("B", x = unit(0, "npc"), y=unit(0.9, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data5_arrange1.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_3 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_3 <- arrangeGrob(target_line_plot_3, top=textGrob("C", x = unit(-0.03, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/paper_data5_arrange1/")
#List all transcript output files
plot_data <- read.table('expression_pattern_best.tsv', header=TRUE)
plot_data <- filter(plot_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
final_line_plot_3 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(size=17),
axis.title = element_blank(),
plot.margin = unit(c(-5.50,0.5,5.75,0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
final_line_plot_3 <- arrangeGrob(final_line_plot_3, top=textGrob("C", x = unit(0.0, "npc"), y=unit(0.9, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data6_arrange1.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_4 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_4 <- arrangeGrob(target_line_plot_4, top=textGrob("D", x = unit(-0.03, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/paper_data6_arrange1/")
#List all transcript output files
plot_data <- read.table('expression_pattern_best.tsv', header=TRUE)
plot_data <- filter(plot_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
final_line_plot_4 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(size=17),
axis.title = element_blank(),
plot.margin = unit(c(-5.50,0.5,5.75,0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
final_line_plot_4 <- arrangeGrob(final_line_plot_4, top=textGrob("D", x = unit(0, "npc"), y=unit(0.9, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
#Target
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/")
#Change grant_data name to the target file used
target_data <- read.table("paper_data8_arrange5.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
target_line_plot_5 <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
plot.margin = unit(c(0.5, 0.5, 0.25, 0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
target_line_plot_5 <- arrangeGrob(target_line_plot_5, top=textGrob("E", x = unit(-0.03, "npc"), y=unit(0.2, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
#Final
#Set working directory to the directory in which the target data is contained in
setwd("../../figure_data/fig2/paper_data8_arrange5/")
#List all transcript output files
plot_data <- read.table('expression_pattern_best.tsv', header=TRUE)
plot_data <- filter(plot_data, (species == "protein1" | species == "protein2" | species == "protein3") & time != 301)
#Create plot
final_line_plot_5 <-  ggplot(plot_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_color_manual(values=c("#56B4E9", "#E69F00", "#CC79A7")) +
panel_border() +
scale_y_continuous(limits = c(0, 45), expand = c(0, 0)) +
theme(legend.position = "none",
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(size=17),
axis.title = element_blank(),
plot.margin = unit(c(-5.50,0.5,5.75,0.5), "cm"),
axis.ticks.length = unit(2, "mm"))
final_line_plot_5 <- arrangeGrob(final_line_plot_5, top=textGrob("E", x = unit(0, "npc"), y=unit(0.9, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=24, fontfamily="Arial")))
setwd("../../figure_output/figure2/")
img1 <- readPNG("figure2_final1_genome_arch.png")
img2 <- readPNG("figure2_final2_genome_arch.png")
img3 <- readPNG("figure2_final3_genome_arch.png")
img4 <- readPNG("figure2_final4_genome_arch.png")
img5 <- readPNG("figure2_final5_genome_arch.png")
figure2 <- grid.arrange(target_line_plot_1, target_line_plot_2, target_line_plot_3, target_line_plot_4, target_line_plot_5, rasterGrob(img1, vjust=-2.05, hjust=0.40, width=0.75), rasterGrob(img2, vjust=-2.27, width=0.93), rasterGrob(img3, vjust=-2.27, width=0.93), rasterGrob(img4, vjust=-2.34, width=0.93), rasterGrob(img5, vjust=-2.22, width=0.93), final_line_plot_1, final_line_plot_2, final_line_plot_3, final_line_plot_4, final_line_plot_5, layout_matrix=rbind(c(1,2,3,4,5), c(6,7,8,9,10), c(11,12,13,14,15)), widths=c(3.07,2.35,2.35,2.35,2.35), bottom=textGrob("Time (s)", gp=gpar(fontsize=17, fontfamily="Arial"), vjust=-13, hjust=-0.01))
ggsave("figure2.png", figure2, height=8, width=14, limitsize=FALSE, units="in")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(viridis)
library(grid)
library(gridExtra)
library(cowplot)
library(reshape2)
#Read in CSV file containing processed data
df <- read.csv("../../figure_data/fig3/figure3_data.csv")
nrmse_bp <- df %>% ggplot(aes(x=pattern, y=nrmse)) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(color="black", size=0.5) +
theme_cowplot() +
xlab("Pattern") +
ylab("Normalized RMSE") +
scale_y_continuous(limits=c(0, 0.35), expand=c(0,0)) +
scale_x_discrete(labels=c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10")) +
geom_hline(yintercept = 0.1, linetype="solid", color = "red") +
theme(legend.position = "none",
axis.text.x = element_text(size=17),
axis.text.y = element_text(size=15),
axis.title = element_text(size=15),
plot.margin = unit(c(4.0, 2.0, 0, -1.0), "mm"),
axis.ticks.length = unit(2, "mm"))
#Letter corresponding to plot in figure is added
nrmse_bp <- arrangeGrob(nrmse_bp, top=textGrob("B", x = unit(-0.02, "npc"), y=unit(1.0, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=20, fontfamily="Arial")))
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(dplyr)
library(ggplot2)
library(ggsci)
library(grid)
library(gridExtra)
library(png)
color_palette <- c("#00468BFF", "#42B540FF", "#0099B4FF", "#925E9FFF", "#FDAF91FF", "#AD002AFF", "#ADB6B6FF", "#1B1919FF", "#ED0000FF", "#024B30")
setwd("../../figure_data/fig5/")
#Read in target tsv file and filter for only proteins
target_data <- read.table("ten_genes.tsv", header=TRUE)
setwd("../../figure_data/fig5/")
#Read in target tsv file and filter for only proteins
target_data <- read.table("ten_genes.tsv", header=TRUE)
target_data <- filter(target_data, (species == "protein1" | species == "protein2" | species == "protein3" | species == "protein4" | species == "protein5" | species == "protein6" | species == "protein7" | species == "protein8" | species == "protein9" | species == "protein10") & time != 301)
#Create line plot
target_line_plot <-  ggplot(target_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_y_continuous(limits=c(0,40), expand=c(0,0)) +
ylab('Transcript abundance') +
xlab("Time (s)") +
ggtitle("Target pattern") +
theme(legend.position = "none",
plot.title = element_text(size=10, face="bold"),
axis.ticks.length = unit(2, "mm"),
axis.text = element_text(size=8),
axis.title = element_text(size=11)) +
scale_color_manual(values=color_palette) +
panel_border()
target_line_plot <- arrangeGrob(target_line_plot, top=textGrob("A", x = unit(0, "npc"), y=unit(1.0, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=10, fontfamily="Arial")))
setwd("../../figure_data/fig5/")
#Read in simulated tsv file an filter based on proteins
simulated_data <- read.table("expression_pattern_best.tsv", header=TRUE)
simulated_data <- filter(simulated_data, (species == "protein1" | species == "protein2" | species == "protein3" | species == "protein4" | species == "protein5" | species == "protein6" | species == "protein7" | species == "protein8" | species == "protein9" | species == "protein10") & time != 301)
#Create line plot
simulated_line_plot <-  ggplot(simulated_data, aes(fill=species, color=species, size=species, x=time, y=transcript)) +
geom_line(stat="identity", size=1) +
theme_cowplot() +
scale_y_continuous(limits=c(0,40), expand=c(0,0)) +
ylab('Transcript abundance') +
xlab("Time (s)") +
ggtitle("Evolved pattern") +
theme(legend.position = "none",
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.title.y = element_blank(),
plot.title = element_text(size=10, face="bold"),
axis.ticks.length = unit(2, "mm"),
axis.text = element_text(size=8),
axis.title = element_text(size=11)) +
scale_color_manual(values=color_palette) +
panel_border()
simulated_line_plot <- arrangeGrob(simulated_line_plot, top=textGrob("A", x = unit(0, "npc"), y=unit(1.0, "npc"), just=c("left","top"), gp=gpar(col="white", font="bold", fontsize=10, fontfamily="Arial")))
setwd("../../figure_output/figure5/")
#Read in genome architecture
img_starting <- readPNG("figure5_genome_arch_starting.png")
img_final <- readPNG("figure5_genome_arch_final.png")
img_starting <- arrangeGrob(rasterGrob(img_starting, vjust=-4.25), top=textGrob("B", x = unit(0, "npc"), y=unit(2.0, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=10, fontfamily="Arial")))
img_starting <- arrangeGrob(img_starting, top=textGrob("Starting architecture", x = unit(0.35, "npc"), y=unit(0, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=12, fontfamily="Arial")))
img_final <- arrangeGrob(rasterGrob(img_final, vjust=-12.25), top=textGrob("Final architecture", x = unit(0.37, "npc"), y=unit(8.0, "npc"), just=c("left","top"), gp=gpar(col="black", font="bold", fontsize=12, fontfamily="Arial")))
#Arrange plots
figure5 <- grid.arrange(target_line_plot, simulated_line_plot, img_starting, img_final, layout_matrix=rbind(c(1, 2), c(3), c(4)), widths=c(2.3, 2))
#Save as figure 5
ggsave("figure5.png", figure5, height=7, width=5, limitsize=FALSE, units="in")
library(dplyr)
library(ggplot2)
library(viridis)
library(grid)
library(gridExtra)
library(cowplot)
library(reshape2)
setwd("../../manuscript_results/figs_3_and_4/")
pattern <- c()
nrmse <- c()
best_patterns <- c()
tmp_avg <- 5.0
#Goes into each directory and finds the corresponding folders to extract normalized RMSE data for each subpattern ran
for(data in 1:10){
for(arrangement in 1:6){
data_name <- paste0("paper_data", data, "_arrange", arrangement)
pattern_name <- as.character(paste0(data,arrangement))
for(rep in 1:50){
if(dir.exists(paste0("./", data_name, "/rep", rep, "/final/"))){
rmse_data <- read.table(paste0("./", data_name, "/rep", rep, "/final/rmse_data.tsv"), header=TRUE)
rmse_data <- rmse_data %>% filter(Accepted=='yes')
min_rmse <- rmse_data$NRMSE[rmse_data$NRMSE == min(rmse_data$NRMSE)]
pattern[length(pattern) + 1] <- pattern_name
nrmse[length(nrmse) + 1] <- min_rmse
}
}
}
}
df <- data.frame(pattern, nrmse)
